{"ast":null,"code":"import _slicedToArray from \"/Users/shrillpatel/Downloads/Olympic Industry OA/LumberDataProj/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/shrillpatel/Downloads/Olympic Industry OA/LumberDataProj/dashboard/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction App() {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    chartData = _useState2[0],\n    setChartData = _useState2[1]; // chart data\n  var _useState3 = useState({\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'top'\n        },\n        title: {\n          display: true,\n          text: 'Chart.js Line Chart'\n        }\n      },\n      scaleShowGridLines: true,\n      scaleShowVerticalLines: true\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    options = _useState4[0],\n    setOptions = _useState4[1];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Olympic Industries Lumber Futures Data Visualization\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"dataType\",\n    className: \"dataTypeDropdown\",\n    onChange: function onChange(e) {\n      fetch(\"/data?type=\".concat(e.target.value)).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var lumberData = data.allData;\n        setChartData({\n          labels: lumberData.map(function (data) {\n            return data.date;\n          }),\n          datasets: [{\n            label: e.target.value,\n            data: lumberData.map(function (data) {\n              return data.value;\n            }),\n            fill: false,\n            backgroundColor: 'rgb(75, 192, 192)',\n            borderColor: 'rgba(75, 192, 192, 0.2)'\n          }]\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    defaultValue: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"default\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Select Value\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Open\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Open\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"High\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"High\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Low\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Low\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"AdjClose\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"AdjClose\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Volume\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Volume\")), chartData ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 1000\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: chartData,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 50\n    }\n  })) : null));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","register","App","chartData","setChartData","responsive","plugins","legend","position","title","display","text","scaleShowGridLines","scaleShowVerticalLines","options","setOptions","e","fetch","target","value","then","res","json","data","lumberData","allData","labels","map","date","datasets","label","fill","backgroundColor","borderColor","catch","err","console","log","width"],"sources":["/Users/shrillpatel/Downloads/Olympic Industry OA/LumberDataProj/dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport './App.css';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction App() {\n  const [chartData, setChartData] = useState(); // chart data\n  const [options, setOptions] = useState({\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Chart.js Line Chart',\n      },\n    },\n    scaleShowGridLines: true,\n    scaleShowVerticalLines: true,\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>Olympic Industries Lumber Futures Data Visualization</p>\n        <select id=\"dataType\" className='dataTypeDropdown' onChange={\n          (e) => {\n            fetch(`/data?type=${e.target.value}`)\n              .then(res => res.json())\n              .then(data => {\n                var lumberData = data.allData;\n                setChartData({\n                  labels: lumberData.map((data) => data.date),\n                  datasets: [\n                    {\n                      label: e.target.value,\n                      data: lumberData.map((data) => data.value),\n                      fill: false,\n                      backgroundColor: 'rgb(75, 192, 192)',\n                      borderColor: 'rgba(75, 192, 192, 0.2)',\n                    },\n                  ],\n                });\n            }).catch(err => console.log(err));\n          }\n        } defaultValue=\"default\">\n          <option value=\"default\" disabled>Select Value</option>\n          <option value=\"Open\">Open</option>\n          <option value=\"High\">High</option>\n          <option value=\"Low\">Low</option>\n          <option value=\"Close\">Close</option>\n          <option value=\"AdjClose\">AdjClose</option>\n          <option value=\"Volume\">Volume</option>\n        </select>\n        {chartData ? <div style={{ width: 1000}}><Line data={chartData} options={options} /></div> : null}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACjD,OAAO,WAAW;AAClB,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,IAAI,QAAQ,iBAAiB;AAEtCR,OAAO,CAACS,QAAQ,CACdR,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,CACP;AAED,SAASG,GAAG,GAAG;EAAA,gBACqBb,QAAQ,EAAE;IAAA;IAArCc,SAAS;IAAEC,YAAY,kBAAgB;EAAA,iBAChBf,QAAQ,CAAC;MACrCgB,UAAU,EAAE,IAAI;MAChBC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,QAAQ,EAAE;QACZ,CAAC;QACDC,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF,CAAC;MACDC,kBAAkB,EAAE,IAAI;MACxBC,sBAAsB,EAAE;IAC1B,CAAC,CAAC;IAAA;IAbKC,OAAO;IAAEC,UAAU;EAe1B,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAClB;IAAQ,SAAS,EAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC5B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,0DAA2D,eAC3D;IAAQ,EAAE,EAAC,UAAU;IAAC,SAAS,EAAC,kBAAkB;IAAC,QAAQ,EACzD,kBAACC,CAAC,EAAK;MACLC,KAAK,sBAAeD,CAAC,CAACE,MAAM,CAACC,KAAK,EAAG,CAClCC,IAAI,CAAC,UAAAC,GAAG;QAAA,OAAIA,GAAG,CAACC,IAAI,EAAE;MAAA,EAAC,CACvBF,IAAI,CAAC,UAAAG,IAAI,EAAI;QACZ,IAAIC,UAAU,GAAGD,IAAI,CAACE,OAAO;QAC7BrB,YAAY,CAAC;UACXsB,MAAM,EAAEF,UAAU,CAACG,GAAG,CAAC,UAACJ,IAAI;YAAA,OAAKA,IAAI,CAACK,IAAI;UAAA,EAAC;UAC3CC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAEd,CAAC,CAACE,MAAM,CAACC,KAAK;YACrBI,IAAI,EAAEC,UAAU,CAACG,GAAG,CAAC,UAACJ,IAAI;cAAA,OAAKA,IAAI,CAACJ,KAAK;YAAA,EAAC;YAC1CY,IAAI,EAAE,KAAK;YACXC,eAAe,EAAE,mBAAmB;YACpCC,WAAW,EAAE;UACf,CAAC;QAEL,CAAC,CAAC;MACN,CAAC,CAAC,CAACC,KAAK,CAAC,UAAAC,GAAG;QAAA,OAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAAA,EAAC;IACnC,CACD;IAAC,YAAY,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACtB;IAAQ,KAAK,EAAC,SAAS;IAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAsB,eACtD;IAAQ,KAAK,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,UAAc,eAClC;IAAQ,KAAK,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,UAAc,eAClC;IAAQ,KAAK,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,SAAa,eAChC;IAAQ,KAAK,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAAe,eACpC;IAAQ,KAAK,EAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cAAkB,eAC1C;IAAQ,KAAK,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAAgB,CAC/B,EACRhC,SAAS,gBAAG;IAAK,KAAK,EAAE;MAAEmC,KAAK,EAAE;IAAI,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAC,oBAAC,IAAI;IAAC,IAAI,EAAEnC,SAAU;IAAC,OAAO,EAAEW,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAAM,GAAG,IAAI,CAC1F,CACL;AAEV;AAEA,eAAeZ,GAAG"},"metadata":{},"sourceType":"module"}